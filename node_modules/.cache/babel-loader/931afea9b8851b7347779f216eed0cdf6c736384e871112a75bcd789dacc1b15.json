{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\labon\\\\jewelry-frontend\\\\jewelry-website\\\\frontEnd\\\\src\\\\pages\\\\YourPage.js\",\n  _s = $RefreshSig$();\n/*import React, { useState } from \"react\";\r\nimport { getLocalItems } from '../utils/offlineQueue.js';\r\n\r\nconst YourPage = ({\r\n    items,\r\n    handleAddItem,\r\n    handleSaveEdit,\r\n    handleEditItem,\r\n    handleDeleteItem,\r\n    newItem,\r\n    setNewItem,\r\n    editing,\r\n    setEditing,\r\n    styles,\r\n    categoryList,\r\n    isOnline,\r\n    serverAvailable\r\n}) => {\r\n    const [videoFile, setVideoFile] = useState(null);\r\n\r\n    const userAddedItems = items.filter(item => item.userAdded);\r\n    const prices = userAddedItems.map(item => item.price);\r\n    const maxPrice = Math.max(...prices, 0);\r\n    const minPrice = Math.min(...prices, Infinity);\r\n    const avgPrice = prices.length > 0 ? prices.reduce((sum, price) => sum + price, 0) / prices.length : 0;\r\n\r\n    const getBackgroundColor = (price) => {\r\n        if (prices.length === 0) return 'white';\r\n        if (price === maxPrice) return '#EFC3CA';\r\n        if (price === minPrice) return '#C1F8FA';\r\n        if (Math.abs(price - avgPrice) < 1) return '#B7B7B7';\r\n        return 'white';\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData(e.target);\r\n        if (videoFile) {\r\n            formData.append('video', videoFile);\r\n        }\r\n\r\n        if (editing) {\r\n            await handleSaveEdit(e);\r\n        } else {\r\n            await handleAddItem(e);\r\n        }\r\n\r\n        setVideoFile(null);\r\n        e.target.reset();\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setEditing(false);\r\n        setNewItem({ name: \"\", description: \"\", style: \"\", category: \"\", price: 0 });\r\n        setVideoFile(null);\r\n    };\r\n\r\n    const uploadVideo = async (itemId, file) => {\r\n        const formData = new FormData();\r\n        formData.append(\"video\", file);\r\n        try {\r\n            await fetch(`/upload/${itemId}`, {\r\n                method: \"POST\",\r\n                body: formData,\r\n            });\r\n        } catch (err) {\r\n            console.error(\"Video upload failed:\", err);\r\n        }\r\n    };\r\n\r\n    const handleDownloadVideo = async (productId, videoName) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:4000/api/products/${productId}/video/download`);\r\n            if (response.ok) {\r\n                const blob = await response.blob();\r\n                const url = window.URL.createObjectURL(blob);\r\n                const a = document.createElement('a');\r\n                a.href = url;\r\n                a.download = videoName || `${productId}.mp4`;\r\n                document.body.appendChild(a);\r\n                a.click();\r\n                document.body.removeChild(a);\r\n                window.URL.revokeObjectURL(url);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error downloading video:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"panel\" style={{ padding: \"20px\" }}>\r\n            <h2>Your Items ({userAddedItems.length})</h2>\r\n\r\n            <div className=\"jewelry-list\" style={{\r\n                display: \"grid\",\r\n                gridTemplateColumns: \"repeat(auto-fill, minmax(300px, 1fr))\",\r\n                gap: \"20px\",\r\n                marginBottom: \"40px\"\r\n            }}>\r\n                {userAddedItems.map(item => (\r\n                    <div\r\n                        key={item.id}\r\n                        className=\"jewelry-card\"\r\n                        style={{\r\n                            backgroundColor: getBackgroundColor(item.price),\r\n                            padding: \"15px\",\r\n                            borderRadius: \"8px\",\r\n                            boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\r\n                            position: \"relative\"\r\n                        }}\r\n                    >\r\n                        <h3 style={{ marginTop: 0 }}>{item.name}</h3>\r\n                        <p>{item.description}</p>\r\n                        <p><strong>Style:</strong> {item.style}</p>\r\n                        <p><strong>Category:</strong> {item.category}</p>\r\n                        <p><strong>Price:</strong> ${item.price.toFixed(2)}</p>\r\n\r\n                        {item.video && (\r\n                            <div style={{ margin: \"10px 0\" }}>\r\n                                <video\r\n                                    controls\r\n                                    width=\"100%\"\r\n                                    src={`http://localhost:4000/api/products/${item.id}/video`}\r\n                                    style={{ borderRadius: \"8px\" }}\r\n                                />\r\n                                <button\r\n                                    onClick={() => handleDownloadVideo(item.id, item.video)}\r\n                                    style={{\r\n                                        marginTop: \"5px\",\r\n                                        padding: \"5px 10px\",\r\n                                        backgroundColor: \"#4CAF50\",\r\n                                        color: \"white\",\r\n                                        border: \"none\",\r\n                                        borderRadius: \"4px\",\r\n                                        cursor: \"pointer\",\r\n                                        width: \"100%\"\r\n                                    }}\r\n                                >\r\n                                    Download Video\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div style={{ display: \"flex\", gap: \"10px\", marginTop: \"10px\" }}>\r\n                            <button\r\n                                onClick={() => handleEditItem(item)}\r\n                                style={{\r\n                                    padding: \"5px 10px\",\r\n                                    backgroundColor: \"#4CAF50\",\r\n                                    color: \"white\",\r\n                                    border: \"none\",\r\n                                    borderRadius: \"4px\",\r\n                                    cursor: \"pointer\"\r\n                                }}\r\n                            >\r\n                                Edit\r\n                            </button>\r\n                            <button\r\n                                onClick={() => handleDeleteItem(item.id)}\r\n                                style={{\r\n                                    padding: \"5px 10px\",\r\n                                    backgroundColor: \"#f44336\",\r\n                                    color: \"white\",\r\n                                    border: \"none\",\r\n                                    borderRadius: \"4px\",\r\n                                    cursor: \"pointer\"\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"panel\" style={{\r\n                backgroundColor: \"#f9f9f9\",\r\n                padding: \"20px\",\r\n                borderRadius: \"8px\",\r\n                maxWidth: \"500px\",\r\n                margin: \"0 auto\"\r\n            }}>\r\n                <h2 style={{ marginTop: 0 }}>{editing ? \"Edit Item\" : \"Add New Item\"}</h2>\r\n                <form onSubmit={handleSubmit} style={{ display: \"flex\", flexDirection: \"column\", gap: \"15px\" }}>\r\n\r\n                    <div>\r\n                        <label>Upload Video (optional):</label>\r\n                        <input\r\n                            type=\"file\"\r\n                            name=\"video\"\r\n                            accept=\"video/*\"\r\n                            onChange={(e) => setVideoFile(e.target.files[0])}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Name:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Item name\"\r\n                            value={newItem.name}\r\n                            onChange={(e) => setNewItem({ ...newItem, name: e.target.value })}\r\n                            required\r\n                            style={{ width: \"100%\", padding: \"8px\" }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Description:</label>\r\n                        <textarea\r\n                            placeholder=\"Item description\"\r\n                            value={newItem.description}\r\n                            onChange={(e) => setNewItem({ ...newItem, description: e.target.value })}\r\n                            required\r\n                            style={{ width: \"100%\", padding: \"8px\", minHeight: \"80px\" }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Style:</label>\r\n                        <select\r\n                            value={newItem.style}\r\n                            onChange={(e) => setNewItem({ ...newItem, style: e.target.value })}\r\n                            required\r\n                            style={{ width: \"100%\", padding: \"8px\" }}\r\n                        >\r\n                            <option value=\"\">Select Style</option>\r\n                            {styles.map(style => (\r\n                                <option key={style} value={style}>{style}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Category:</label>\r\n                        <select\r\n                            value={newItem.category}\r\n                            onChange={(e) =>\r\n                                setNewItem({ ...newItem, category: e.target.value })\r\n                            }\r\n                        >\r\n                            <option value=\"\">Select category</option>\r\n                            {categoryList.map((cat) => (\r\n                                <option key={cat.id} value={cat.id}>\r\n                                    {cat.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Price ($):</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"0.00\"\r\n                            value={newItem.price}\r\n                            onChange={(e) => setNewItem({ ...newItem, price: parseFloat(e.target.value) || 0 })}\r\n                            required\r\n                            min=\"0\"\r\n                            step=\"0.01\"\r\n                            style={{ width: \"100%\", padding: \"8px\" }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div style={{ display: \"flex\", gap: \"10px\", marginTop: \"10px\" }}>\r\n                        <button\r\n                            type=\"submit\"\r\n                            style={{\r\n                                padding: \"10px 15px\",\r\n                                backgroundColor: \"#4CAF50\",\r\n                                color: \"white\",\r\n                                border: \"none\",\r\n                                borderRadius: \"4px\",\r\n                                cursor: \"pointer\",\r\n                                flex: 1\r\n                            }}\r\n                        >\r\n                            {editing ? \"Save Changes\" : \"Add Item\"}\r\n                        </button>\r\n                        {editing && (\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={handleCancel}\r\n                                style={{\r\n                                    padding: \"10px 15px\",\r\n                                    backgroundColor: \"#f44336\",\r\n                                    color: \"white\",\r\n                                    border: \"none\",\r\n                                    borderRadius: \"4px\",\r\n                                    cursor: \"pointer\",\r\n                                    flex: 1\r\n                                }}\r\n                            >\r\n                                Cancel\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default YourPage;*/\n\n//brnze fix hopefully\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YourPage = ({\n  items,\n  handleAddItem,\n  handleSaveEdit,\n  handleEditItem,\n  handleDeleteItem,\n  newItem,\n  setNewItem,\n  editing,\n  setEditing,\n  styles,\n  categoryList = []\n}) => {\n  _s();\n  const [videoFile, setVideoFile] = useState(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const userAddedItems = items.filter(item => item.user_added || item.userAdded === true);\n  const prices = userAddedItems.map(item => item.price);\n  const maxPrice = Math.max(...prices, 0);\n  const minPrice = Math.min(...prices, Infinity);\n  const avgPrice = prices.length > 0 ? prices.reduce((sum, price) => sum + price, 0) / prices.length : 0;\n  const getBackgroundColor = price => {\n    if (prices.length === 0) return 'white';\n    if (price === maxPrice) return '#EFC3CA';\n    if (price === minPrice) return '#C1F8FA';\n    if (Math.abs(price - avgPrice) < 1) return '#B7B7B7';\n    return 'white';\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    try {\n      if (editing) {\n        await handleSaveEdit(e);\n      } else {\n        await handleAddItem(e);\n      }\n\n      // Reset form only if successful\n      setNewItem({\n        name: \"\",\n        description: \"\",\n        style: \"\",\n        category: \"\",\n        price: 0\n      });\n      setVideoFile(null);\n      e.target.reset();\n    } catch (error) {\n      console.error(\"Form submission error:\", error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const handleCancel = () => {\n    setEditing(false);\n    setNewItem({\n      name: \"\",\n      description: \"\",\n      style: \"\",\n      category: \"\",\n      price: 0\n    });\n    setVideoFile(null);\n  };\n  const handleDownloadVideo = async (productId, videoName) => {\n    try {\n      const response = await fetch(`http://localhost:4000/api/products/${productId}/video/download`);\n      if (response.ok) {\n        const blob = await response.blob();\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = videoName || `${productId}.mp4`;\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        window.URL.revokeObjectURL(url);\n      }\n    } catch (error) {\n      console.error('Error downloading video:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel\",\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Your Items (\", userAddedItems.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 13\n    }, this), userAddedItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No items added yet. Add your first item below.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jewelry-list\",\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(auto-fill, minmax(300px, 1fr))\",\n        gap: \"20px\",\n        marginBottom: \"40px\"\n      },\n      children: userAddedItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jewelry-card\",\n        style: {\n          backgroundColor: getBackgroundColor(item.price),\n          padding: \"15px\",\n          borderRadius: \"8px\",\n          boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n          position: \"relative\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: 0\n          },\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Style:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 32\n          }, this), \" \", item.style]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 32\n          }, this), \" \", item.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 32\n          }, this), \" $\", item.price.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 29\n        }, this), item.video && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"10px 0\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            controls: true,\n            width: \"100%\",\n            src: `http://localhost:4000/api/products/${item.id}/video`,\n            style: {\n              borderRadius: \"8px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDownloadVideo(item.id, item.video),\n            style: {\n              marginTop: \"5px\",\n              padding: \"5px 10px\",\n              backgroundColor: \"#4CAF50\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"4px\",\n              cursor: \"pointer\",\n              width: \"100%\"\n            },\n            children: \"Download Video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: \"10px\",\n            marginTop: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditItem(item),\n            style: {\n              padding: \"5px 10px\",\n              backgroundColor: \"#4CAF50\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"4px\",\n              cursor: \"pointer\"\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteItem(item.id),\n            style: {\n              padding: \"5px 10px\",\n              backgroundColor: \"#f44336\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"4px\",\n              cursor: \"pointer\"\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 29\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel\",\n      style: {\n        backgroundColor: \"#f9f9f9\",\n        padding: \"20px\",\n        borderRadius: \"8px\",\n        maxWidth: \"500px\",\n        margin: \"0 auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginTop: 0\n        },\n        children: editing ? \"Edit Item\" : \"Add New Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Upload Video (optional):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"video\",\n            accept: \"video/*\",\n            onChange: e => setVideoFile(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Item name\",\n            value: newItem.name,\n            onChange: e => setNewItem({\n              ...newItem,\n              name: e.target.value\n            }),\n            required: true,\n            style: {\n              width: \"100%\",\n              padding: \"8px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Item description\",\n            value: newItem.description,\n            onChange: e => setNewItem({\n              ...newItem,\n              description: e.target.value\n            }),\n            required: true,\n            style: {\n              width: \"100%\",\n              padding: \"8px\",\n              minHeight: \"80px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Style:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newItem.style,\n            onChange: e => setNewItem({\n              ...newItem,\n              style: e.target.value\n            }),\n            required: true,\n            style: {\n              width: \"100%\",\n              padding: \"8px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Style\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 29\n            }, this), styles.map(style => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: style,\n              children: style\n            }, style, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newItem.category,\n            onChange: e => setNewItem({\n              ...newItem,\n              category: e.target.value\n            }),\n            required: true,\n            style: {\n              width: \"100%\",\n              padding: \"8px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 29\n            }, this), categoryList.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat.id,\n              children: cat.name\n            }, cat.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Price ($):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"0.00\",\n            value: newItem.price,\n            onChange: e => setNewItem({\n              ...newItem,\n              price: parseFloat(e.target.value) || 0\n            }),\n            required: true,\n            min: \"0\",\n            step: \"0.01\",\n            style: {\n              width: \"100%\",\n              padding: \"8px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: \"10px\",\n            marginTop: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting,\n            style: {\n              padding: \"10px 15px\",\n              backgroundColor: isSubmitting ? \"#cccccc\" : \"#4CAF50\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"4px\",\n              cursor: isSubmitting ? \"not-allowed\" : \"pointer\",\n              flex: 1\n            },\n            children: isSubmitting ? \"Processing...\" : editing ? \"Save Changes\" : \"Add Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 25\n          }, this), editing && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleCancel,\n            disabled: isSubmitting,\n            style: {\n              padding: \"10px 15px\",\n              backgroundColor: \"#f44336\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"4px\",\n              cursor: \"pointer\",\n              flex: 1\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 396,\n    columnNumber: 9\n  }, this);\n};\n_s(YourPage, \"j+bPtefIE0OPKLCyC0kC0ADqEEM=\");\n_c = YourPage;\nexport default YourPage;\n\n/*import React, { useState } from \"react\";\r\nimport { getLocalItems } from '../utils/offlineQueue.js';\r\n\r\nconst YourPage = ({\r\n    items,\r\n    handleAddItem,\r\n    handleSaveEdit,\r\n    handleEditItem,\r\n    handleDeleteItem,\r\n    newItem,\r\n    setNewItem,\r\n    editing,\r\n    setEditing,\r\n    styles,\r\n    categories,\r\n    isOnline,\r\n    serverAvailable\r\n}) => {\r\n\r\n    const [videoFile, setVideoFile] = useState(null);\r\n    const userAddedItems = items.filter(item => item.userAdded);\r\n    const prices = userAddedItems.map(item => item.price);\r\n    const maxPrice = Math.max(...prices, 0);\r\n    const minPrice = Math.min(...prices, Infinity);\r\n    const avgPrice = prices.length > 0 ? prices.reduce((sum, price) => sum + price, 0) / prices.length : 0;\r\n\r\n    const getBackgroundColor = (price) => {\r\n        if (prices.length === 0) return 'white';\r\n        if (price === maxPrice) return '#EFC3CA';\r\n        if (price === minPrice) return '#C1F8FA';\r\n        if (Math.abs(price - avgPrice) < 1) return '#B7B7B7';\r\n        return 'white';\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        /*const item = editing ? await handleSaveEdit(e) : await handleAddItem(e);\r\n        if (videoFile && item?.id) {\r\n            await uploadVideo(item.id, videoFile);\r\n            setVideoFile(null);\r\n        }\r\nconst formData = new FormData(e.target);\r\nif (videoFile) {\r\n    formData.append('video', videoFile);\r\n}\r\n\r\nif (editing) {\r\n    await handleSaveEdit(e);\r\n} else {\r\n    await handleAddItem(e);\r\n}\r\n\r\nsetVideoFile(null);\r\ne.target.reset();\r\n    };\r\n\r\nconst handleCancel = () => {\r\n    setEditing(false);\r\n    setNewItem({ name: \"\", description: \"\", style: \"\", category: \"\", price: 0 });\r\n    setVideoFile(null);\r\n};\r\n\r\nconst uploadVideo = async (itemId, file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"video\", file);\r\n    try {\r\n        await fetch(`/upload/${itemId}`, {\r\n            method: \"POST\",\r\n            body: formData,\r\n        });\r\n    } catch (err) {\r\n        console.error(\"Video upload failed:\", err);\r\n    }\r\n};\r\n\r\nconst handleDownloadVideo = async (productId, videoName) => {\r\n    try {\r\n        const response = await fetch(`http://localhost:4000/api/products/${productId}/video/download`);\r\n        if (response.ok) {\r\n            const blob = await response.blob();\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.href = url;\r\n            a.download = videoName || `${productId}.mp4`;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            window.URL.revokeObjectURL(url);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error downloading video:', error);\r\n    }\r\n};\r\n\r\nreturn (\r\n    <div className=\"panel\" style={{ padding: \"20px\" }}>\r\n        <h2>Your Items ({userAddedItems.length})</h2>\r\n\r\n        <div className=\"jewelry-list\" style={{\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"repeat(auto-fill, minmax(300px, 1fr))\",\r\n            gap: \"20px\",\r\n            marginBottom: \"40px\"\r\n        }}>\r\n            {userAddedItems.map(item => (\r\n                <div\r\n                    key={item.id}\r\n                    className=\"jewelry-card\"\r\n                    style={{\r\n                        backgroundColor: getBackgroundColor(item.price),\r\n                        padding: \"15px\",\r\n                        borderRadius: \"8px\",\r\n                        boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\r\n                        position: \"relative\"\r\n                    }}\r\n                >\r\n                    <h3 style={{ marginTop: 0 }}>{item.name}</h3>\r\n                    <p>{item.description}</p>\r\n                    <p><strong>Style:</strong> {item.style}</p>\r\n                    <p><strong>Category:</strong> {item.category}</p>\r\n                    <p><strong>Price:</strong> ${item.price.toFixed(2)}</p>\r\n\r\n                    {item.video && (\r\n                        <div style={{ margin: \"10px 0\" }}>\r\n                            <video\r\n                                controls\r\n                                width=\"100%\"\r\n                                src={`http://localhost:4000/api/products/${item.id}/video`}\r\n                                style={{ borderRadius: \"8px\" }}\r\n                            />\r\n                            <button\r\n                                onClick={() => handleDownloadVideo(item.id, item.video)}\r\n                                style={{\r\n                                    marginTop: \"5px\",\r\n                                    padding: \"5px 10px\",\r\n                                    backgroundColor: \"#4CAF50\",\r\n                                    color: \"white\",\r\n                                    border: \"none\",\r\n                                    borderRadius: \"4px\",\r\n                                    cursor: \"pointer\",\r\n                                    width: \"100%\"\r\n                                }}\r\n                            >\r\n                                Download Video\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n\r\n                    <div style={{ display: \"flex\", gap: \"10px\", marginTop: \"10px\" }}>\r\n                        <button\r\n                            onClick={() => handleEditItem(item)}\r\n                            style={{\r\n                                padding: \"5px 10px\",\r\n                                backgroundColor: \"#4CAF50\",\r\n                                color: \"white\",\r\n                                border: \"none\",\r\n                                borderRadius: \"4px\",\r\n                                cursor: \"pointer\"\r\n                            }}\r\n                        >\r\n                            Edit\r\n                        </button>\r\n                        <button\r\n                            onClick={() => handleDeleteItem(item.id)}\r\n                            style={{\r\n                                padding: \"5px 10px\",\r\n                                backgroundColor: \"#f44336\",\r\n                                color: \"white\",\r\n                                border: \"none\",\r\n                                borderRadius: \"4px\",\r\n                                cursor: \"pointer\"\r\n                            }}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n\r\n        <div className=\"panel\" style={{\r\n            backgroundColor: \"#f9f9f9\",\r\n            padding: \"20px\",\r\n            borderRadius: \"8px\",\r\n            maxWidth: \"500px\",\r\n            margin: \"0 auto\"\r\n        }}>\r\n            <h2 style={{ marginTop: 0 }}>{editing ? \"Edit Item\" : \"Add New Item\"}</h2>\r\n            <form onSubmit={handleSubmit} style={{ display: \"flex\", flexDirection: \"column\", gap: \"15px\" }}>\r\n\r\n                <div>\r\n                    <label>Upload Video (optional):</label>\r\n                    <input\r\n                        type=\"file\"\r\n                        name=\"video\"\r\n                        accept=\"video/*\"\r\n                        onChange={(e) => setVideoFile(e.target.files[0])}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Name:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Item name\"\r\n                        value={newItem.name}\r\n                        onChange={(e) => setNewItem({ ...newItem, name: e.target.value })}\r\n                        required\r\n                        style={{ width: \"100%\", padding: \"8px\" }}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Description:</label>\r\n                    <textarea\r\n                        placeholder=\"Item description\"\r\n                        value={newItem.description}\r\n                        onChange={(e) => setNewItem({ ...newItem, description: e.target.value })}\r\n                        required\r\n                        style={{ width: \"100%\", padding: \"8px\", minHeight: \"80px\" }}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Style:</label>\r\n                    <select\r\n                        value={newItem.style}\r\n                        onChange={(e) => setNewItem({ ...newItem, style: e.target.value })}\r\n                        required\r\n                        style={{ width: \"100%\", padding: \"8px\" }}\r\n                    >\r\n                        <option value=\"\">Select Style</option>\r\n                        {styles.map(style => (\r\n                            <option key={style} value={style}>{style}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Category:</label>\r\n                    <select\r\n                        value={newItem.category}\r\n                        onChange={(e) => setNewItem({ ...newItem, category: e.target.value })}\r\n                        required\r\n                        style={{ width: \"100%\", padding: \"8px\" }}\r\n                    >\r\n                        <option value=\"\">Select Category</option>\r\n                        {categories.map(cat => (\r\n                            <option key={cat} value={cat}>{cat}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Price ($):</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"0.00\"\r\n                        value={newItem.price}\r\n                        onChange={(e) => setNewItem({ ...newItem, price: parseFloat(e.target.value) || 0 })}\r\n                        required\r\n                        min=\"0\"\r\n                        step=\"0.01\"\r\n                        style={{ width: \"100%\", padding: \"8px\" }}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Upload Video:</label>\r\n                    <input\r\n                        type=\"file\"\r\n                        name=\"video\"\r\n                        accept=\"video/*\"\r\n                        onChange={(e) => setVideoFile(e.target.files[0])}\r\n                    />\r\n                </div>\r\n\r\n                <div style={{ display: \"flex\", gap: \"10px\", marginTop: \"10px\" }}>\r\n                    <button\r\n                        type=\"submit\"\r\n                        style={{\r\n                            padding: \"10px 15px\",\r\n                            backgroundColor: \"#4CAF50\",\r\n                            color: \"white\",\r\n                            border: \"none\",\r\n                            borderRadius: \"4px\",\r\n                            cursor: \"pointer\",\r\n                            flex: 1\r\n                        }}\r\n                    >\r\n                        {editing ? \"Save Changes\" : \"Add Item\"}\r\n                    </button>\r\n                    {editing && (\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={handleCancel}\r\n                            style={{\r\n                                padding: \"10px 15px\",\r\n                                backgroundColor: \"#f44336\",\r\n                                color: \"white\",\r\n                                border: \"none\",\r\n                                borderRadius: \"4px\",\r\n                                cursor: \"pointer\",\r\n                                flex: 1\r\n                            }}\r\n                        >\r\n                            Cancel\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default YourPage\r\n*/\nvar _c;\n$RefreshReg$(_c, \"YourPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","YourPage","items","handleAddItem","handleSaveEdit","handleEditItem","handleDeleteItem","newItem","setNewItem","editing","setEditing","styles","categoryList","_s","videoFile","setVideoFile","isSubmitting","setIsSubmitting","userAddedItems","filter","item","user_added","userAdded","prices","map","price","maxPrice","Math","max","minPrice","min","Infinity","avgPrice","length","reduce","sum","getBackgroundColor","abs","handleSubmit","e","preventDefault","name","description","style","category","target","reset","error","console","handleCancel","handleDownloadVideo","productId","videoName","response","fetch","ok","blob","url","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","className","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","gap","marginBottom","backgroundColor","borderRadius","boxShadow","position","marginTop","toFixed","video","margin","controls","width","src","id","onClick","color","border","cursor","maxWidth","onSubmit","flexDirection","type","accept","onChange","files","placeholder","value","required","minHeight","cat","parseFloat","step","disabled","flex","_c","$RefreshReg$"],"sources":["C:/Users/labon/jewelry-frontend/jewelry-website/frontEnd/src/pages/YourPage.js"],"sourcesContent":["/*import React, { useState } from \"react\";\r\nimport { getLocalItems } from '../utils/offlineQueue.js';\r\n\r\nconst YourPage = ({\r\n    items,\r\n    handleAddItem,\r\n    handleSaveEdit,\r\n    handleEditItem,\r\n    handleDeleteItem,\r\n    newItem,\r\n    setNewItem,\r\n    editing,\r\n    setEditing,\r\n    styles,\r\n    categoryList,\r\n    isOnline,\r\n    serverAvailable\r\n}) => {\r\n    const [videoFile, setVideoFile] = useState(null);\r\n\r\n    const userAddedItems = items.filter(item => item.userAdded);\r\n    const prices = userAddedItems.map(item => item.price);\r\n    const maxPrice = Math.max(...prices, 0);\r\n    const minPrice = Math.min(...prices, Infinity);\r\n    const avgPrice = prices.length > 0 ? prices.reduce((sum, price) => sum + price, 0) / prices.length : 0;\r\n\r\n    const getBackgroundColor = (price) => {\r\n        if (prices.length === 0) return 'white';\r\n        if (price === maxPrice) return '#EFC3CA';\r\n        if (price === minPrice) return '#C1F8FA';\r\n        if (Math.abs(price - avgPrice) < 1) return '#B7B7B7';\r\n        return 'white';\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData(e.target);\r\n        if (videoFile) {\r\n            formData.append('video', videoFile);\r\n        }\r\n\r\n        if (editing) {\r\n            await handleSaveEdit(e);\r\n        } else {\r\n            await handleAddItem(e);\r\n        }\r\n\r\n        setVideoFile(null);\r\n        e.target.reset();\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setEditing(false);\r\n        setNewItem({ name: \"\", description: \"\", style: \"\", category: \"\", price: 0 });\r\n        setVideoFile(null);\r\n    };\r\n\r\n    const uploadVideo = async (itemId, file) => {\r\n        const formData = new FormData();\r\n        formData.append(\"video\", file);\r\n        try {\r\n            await fetch(`/upload/${itemId}`, {\r\n                method: \"POST\",\r\n                body: formData,\r\n            });\r\n        } catch (err) {\r\n            console.error(\"Video upload failed:\", err);\r\n        }\r\n    };\r\n\r\n    const handleDownloadVideo = async (productId, videoName) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:4000/api/products/${productId}/video/download`);\r\n            if (response.ok) {\r\n                const blob = await response.blob();\r\n                const url = window.URL.createObjectURL(blob);\r\n                const a = document.createElement('a');\r\n                a.href = url;\r\n                a.download = videoName || `${productId}.mp4`;\r\n                document.body.appendChild(a);\r\n                a.click();\r\n                document.body.removeChild(a);\r\n                window.URL.revokeObjectURL(url);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error downloading video:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"panel\" style={{ padding: \"20px\" }}>\r\n            <h2>Your Items ({userAddedItems.length})</h2>\r\n\r\n            <div className=\"jewelry-list\" style={{\r\n                display: \"grid\",\r\n                gridTemplateColumns: \"repeat(auto-fill, minmax(300px, 1fr))\",\r\n                gap: \"20px\",\r\n                marginBottom: \"40px\"\r\n            }}>\r\n                {userAddedItems.map(item => (\r\n                    <div\r\n                        key={item.id}\r\n                        className=\"jewelry-card\"\r\n                        style={{\r\n                            backgroundColor: getBackgroundColor(item.price),\r\n                            padding: \"15px\",\r\n                            borderRadius: \"8px\",\r\n                            boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\r\n                            position: \"relative\"\r\n                        }}\r\n                    >\r\n                        <h3 style={{ marginTop: 0 }}>{item.name}</h3>\r\n                        <p>{item.description}</p>\r\n                        <p><strong>Style:</strong> {item.style}</p>\r\n                        <p><strong>Category:</strong> {item.category}</p>\r\n                        <p><strong>Price:</strong> ${item.price.toFixed(2)}</p>\r\n\r\n                        {item.video && (\r\n                            <div style={{ margin: \"10px 0\" }}>\r\n                                <video\r\n                                    controls\r\n                                    width=\"100%\"\r\n                                    src={`http://localhost:4000/api/products/${item.id}/video`}\r\n                                    style={{ borderRadius: \"8px\" }}\r\n                                />\r\n                                <button\r\n                                    onClick={() => handleDownloadVideo(item.id, item.video)}\r\n                                    style={{\r\n                                        marginTop: \"5px\",\r\n                                        padding: \"5px 10px\",\r\n                                        backgroundColor: \"#4CAF50\",\r\n                                        color: \"white\",\r\n                                        border: \"none\",\r\n                                        borderRadius: \"4px\",\r\n                                        cursor: \"pointer\",\r\n                                        width: \"100%\"\r\n                                    }}\r\n                                >\r\n                                    Download Video\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div style={{ display: \"flex\", gap: \"10px\", marginTop: \"10px\" }}>\r\n                            <button\r\n                                onClick={() => handleEditItem(item)}\r\n                                style={{\r\n                                    padding: \"5px 10px\",\r\n                                    backgroundColor: \"#4CAF50\",\r\n                                    color: \"white\",\r\n                                    border: \"none\",\r\n                                    borderRadius: \"4px\",\r\n                                    cursor: \"pointer\"\r\n                                }}\r\n                            >\r\n                                Edit\r\n                            </button>\r\n                            <button\r\n                                onClick={() => handleDeleteItem(item.id)}\r\n                                style={{\r\n                                    padding: \"5px 10px\",\r\n                                    backgroundColor: \"#f44336\",\r\n                                    color: \"white\",\r\n                                    border: \"none\",\r\n                                    borderRadius: \"4px\",\r\n                                    cursor: \"pointer\"\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"panel\" style={{\r\n                backgroundColor: \"#f9f9f9\",\r\n                padding: \"20px\",\r\n                borderRadius: \"8px\",\r\n                maxWidth: \"500px\",\r\n                margin: \"0 auto\"\r\n            }}>\r\n                <h2 style={{ marginTop: 0 }}>{editing ? \"Edit Item\" : \"Add New Item\"}</h2>\r\n                <form onSubmit={handleSubmit} style={{ display: \"flex\", flexDirection: \"column\", gap: \"15px\" }}>\r\n\r\n                    <div>\r\n                        <label>Upload Video (optional):</label>\r\n                        <input\r\n                            type=\"file\"\r\n                            name=\"video\"\r\n                            accept=\"video/*\"\r\n                            onChange={(e) => setVideoFile(e.target.files[0])}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Name:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Item name\"\r\n                            value={newItem.name}\r\n                            onChange={(e) => setNewItem({ ...newItem, name: e.target.value })}\r\n                            required\r\n                            style={{ width: \"100%\", padding: \"8px\" }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Description:</label>\r\n                        <textarea\r\n                            placeholder=\"Item description\"\r\n                            value={newItem.description}\r\n                            onChange={(e) => setNewItem({ ...newItem, description: e.target.value })}\r\n                            required\r\n                            style={{ width: \"100%\", padding: \"8px\", minHeight: \"80px\" }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Style:</label>\r\n                        <select\r\n                            value={newItem.style}\r\n                            onChange={(e) => setNewItem({ ...newItem, style: e.target.value })}\r\n                            required\r\n                            style={{ width: \"100%\", padding: \"8px\" }}\r\n                        >\r\n                            <option value=\"\">Select Style</option>\r\n                            {styles.map(style => (\r\n                                <option key={style} value={style}>{style}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Category:</label>\r\n                        <select\r\n                            value={newItem.category}\r\n                            onChange={(e) =>\r\n                                setNewItem({ ...newItem, category: e.target.value })\r\n                            }\r\n                        >\r\n                            <option value=\"\">Select category</option>\r\n                            {categoryList.map((cat) => (\r\n                                <option key={cat.id} value={cat.id}>\r\n                                    {cat.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Price ($):</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"0.00\"\r\n                            value={newItem.price}\r\n                            onChange={(e) => setNewItem({ ...newItem, price: parseFloat(e.target.value) || 0 })}\r\n                            required\r\n                            min=\"0\"\r\n                            step=\"0.01\"\r\n                            style={{ width: \"100%\", padding: \"8px\" }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div style={{ display: \"flex\", gap: \"10px\", marginTop: \"10px\" }}>\r\n                        <button\r\n                            type=\"submit\"\r\n                            style={{\r\n                                padding: \"10px 15px\",\r\n                                backgroundColor: \"#4CAF50\",\r\n                                color: \"white\",\r\n                                border: \"none\",\r\n                                borderRadius: \"4px\",\r\n                                cursor: \"pointer\",\r\n                                flex: 1\r\n                            }}\r\n                        >\r\n                            {editing ? \"Save Changes\" : \"Add Item\"}\r\n                        </button>\r\n                        {editing && (\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={handleCancel}\r\n                                style={{\r\n                                    padding: \"10px 15px\",\r\n                                    backgroundColor: \"#f44336\",\r\n                                    color: \"white\",\r\n                                    border: \"none\",\r\n                                    borderRadius: \"4px\",\r\n                                    cursor: \"pointer\",\r\n                                    flex: 1\r\n                                }}\r\n                            >\r\n                                Cancel\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default YourPage;*/\r\n\r\n\r\n\r\n\r\n//brnze fix hopefully\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nconst YourPage = ({\r\n    items,\r\n    handleAddItem,\r\n    handleSaveEdit,\r\n    handleEditItem,\r\n    handleDeleteItem,\r\n    newItem,\r\n    setNewItem,\r\n    editing,\r\n    setEditing,\r\n    styles,\r\n    categoryList = []\r\n}) => {\r\n    const [videoFile, setVideoFile] = useState(null);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    const userAddedItems = items.filter(item => item.user_added || item.userAdded === true);\r\n    const prices = userAddedItems.map(item => item.price);\r\n    const maxPrice = Math.max(...prices, 0);\r\n    const minPrice = Math.min(...prices, Infinity);\r\n    const avgPrice = prices.length > 0 ? prices.reduce((sum, price) => sum + price, 0) / prices.length : 0;\r\n\r\n    const getBackgroundColor = (price) => {\r\n        if (prices.length === 0) return 'white';\r\n        if (price === maxPrice) return '#EFC3CA';\r\n        if (price === minPrice) return '#C1F8FA';\r\n        if (Math.abs(price - avgPrice) < 1) return '#B7B7B7';\r\n        return 'white';\r\n    };\r\n\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setIsSubmitting(true);\r\n\r\n        try {\r\n            if (editing) {\r\n                await handleSaveEdit(e);\r\n            } else {\r\n                await handleAddItem(e);\r\n            }\r\n\r\n            // Reset form only if successful\r\n            setNewItem({ name: \"\", description: \"\", style: \"\", category: \"\", price: 0 });\r\n            setVideoFile(null);\r\n            e.target.reset();\r\n        } catch (error) {\r\n            console.error(\"Form submission error:\", error);\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setEditing(false);\r\n        setNewItem({ name: \"\", description: \"\", style: \"\", category: \"\", price: 0 });\r\n        setVideoFile(null);\r\n    };\r\n\r\n    const handleDownloadVideo = async (productId, videoName) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:4000/api/products/${productId}/video/download`);\r\n            if (response.ok) {\r\n                const blob = await response.blob();\r\n                const url = window.URL.createObjectURL(blob);\r\n                const a = document.createElement('a');\r\n                a.href = url;\r\n                a.download = videoName || `${productId}.mp4`;\r\n                document.body.appendChild(a);\r\n                a.click();\r\n                document.body.removeChild(a);\r\n                window.URL.revokeObjectURL(url);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error downloading video:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"panel\" style={{ padding: \"20px\" }}>\r\n            <h2>Your Items ({userAddedItems.length})</h2>\r\n\r\n            {userAddedItems.length === 0 ? (\r\n                <p>No items added yet. Add your first item below.</p>\r\n            ) : (\r\n                <div className=\"jewelry-list\" style={{\r\n                    display: \"grid\",\r\n                    gridTemplateColumns: \"repeat(auto-fill, minmax(300px, 1fr))\",\r\n                    gap: \"20px\",\r\n                    marginBottom: \"40px\"\r\n                }}>\r\n                    {userAddedItems.map(item => (\r\n                        <div\r\n                            key={item.id}\r\n                            className=\"jewelry-card\"\r\n                            style={{\r\n                                backgroundColor: getBackgroundColor(item.price),\r\n                                padding: \"15px\",\r\n                                borderRadius: \"8px\",\r\n                                boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\r\n                                position: \"relative\"\r\n                            }}\r\n                        >\r\n                            <h3 style={{ marginTop: 0 }}>{item.name}</h3>\r\n                            <p>{item.description}</p>\r\n                            <p><strong>Style:</strong> {item.style}</p>\r\n                            <p><strong>Category:</strong> {item.category}</p>\r\n                            <p><strong>Price:</strong> ${item.price.toFixed(2)}</p>\r\n\r\n                            {item.video && (\r\n                                <div style={{ margin: \"10px 0\" }}>\r\n                                    <video\r\n                                        controls\r\n                                        width=\"100%\"\r\n                                        src={`http://localhost:4000/api/products/${item.id}/video`}\r\n                                        style={{ borderRadius: \"8px\" }}\r\n                                    />\r\n                                    <button\r\n                                        onClick={() => handleDownloadVideo(item.id, item.video)}\r\n                                        style={{\r\n                                            marginTop: \"5px\",\r\n                                            padding: \"5px 10px\",\r\n                                            backgroundColor: \"#4CAF50\",\r\n                                            color: \"white\",\r\n                                            border: \"none\",\r\n                                            borderRadius: \"4px\",\r\n                                            cursor: \"pointer\",\r\n                                            width: \"100%\"\r\n                                        }}\r\n                                    >\r\n                                        Download Video\r\n                                    </button>\r\n                                </div>\r\n                            )}\r\n\r\n                            <div style={{ display: \"flex\", gap: \"10px\", marginTop: \"10px\" }}>\r\n                                <button\r\n                                    onClick={() => handleEditItem(item)}\r\n                                    style={{\r\n                                        padding: \"5px 10px\",\r\n                                        backgroundColor: \"#4CAF50\",\r\n                                        color: \"white\",\r\n                                        border: \"none\",\r\n                                        borderRadius: \"4px\",\r\n                                        cursor: \"pointer\"\r\n                                    }}\r\n                                >\r\n                                    Edit\r\n                                </button>\r\n                                <button\r\n                                    onClick={() => handleDeleteItem(item.id)}\r\n                                    style={{\r\n                                        padding: \"5px 10px\",\r\n                                        backgroundColor: \"#f44336\",\r\n                                        color: \"white\",\r\n                                        border: \"none\",\r\n                                        borderRadius: \"4px\",\r\n                                        cursor: \"pointer\"\r\n                                    }}\r\n                                >\r\n                                    Delete\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"panel\" style={{\r\n                backgroundColor: \"#f9f9f9\",\r\n                padding: \"20px\",\r\n                borderRadius: \"8px\",\r\n                maxWidth: \"500px\",\r\n                margin: \"0 auto\"\r\n            }}>\r\n                <h2 style={{ marginTop: 0 }}>{editing ? \"Edit Item\" : \"Add New Item\"}</h2>\r\n                <form onSubmit={handleSubmit} style={{ display: \"flex\", flexDirection: \"column\", gap: \"15px\" }}>\r\n\r\n                    <div>\r\n                        <label>Upload Video (optional):</label>\r\n                        <input\r\n                            type=\"file\"\r\n                            name=\"video\"\r\n                            accept=\"video/*\"\r\n                            onChange={(e) => setVideoFile(e.target.files[0])}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Name:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Item name\"\r\n                            value={newItem.name}\r\n                            onChange={(e) => setNewItem({ ...newItem, name: e.target.value })}\r\n                            required\r\n                            style={{ width: \"100%\", padding: \"8px\" }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Description:</label>\r\n                        <textarea\r\n                            placeholder=\"Item description\"\r\n                            value={newItem.description}\r\n                            onChange={(e) => setNewItem({ ...newItem, description: e.target.value })}\r\n                            required\r\n                            style={{ width: \"100%\", padding: \"8px\", minHeight: \"80px\" }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Style:</label>\r\n                        <select\r\n                            value={newItem.style}\r\n                            onChange={(e) => setNewItem({ ...newItem, style: e.target.value })}\r\n                            required\r\n                            style={{ width: \"100%\", padding: \"8px\" }}\r\n                        >\r\n                            <option value=\"\">Select Style</option>\r\n                            {styles.map(style => (\r\n                                <option key={style} value={style}>{style}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Category:</label>\r\n                        <select\r\n                            value={newItem.category}\r\n                            onChange={(e) => setNewItem({ ...newItem, category: e.target.value })}\r\n                            required\r\n                            style={{ width: \"100%\", padding: \"8px\" }}\r\n                        >\r\n                            <option value=\"\">Select category</option>\r\n                            {categoryList.map((cat) => (\r\n                                <option key={cat.id} value={cat.id}>\r\n                                    {cat.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Price ($):</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"0.00\"\r\n                            value={newItem.price}\r\n                            onChange={(e) => setNewItem({ ...newItem, price: parseFloat(e.target.value) || 0 })}\r\n                            required\r\n                            min=\"0\"\r\n                            step=\"0.01\"\r\n                            style={{ width: \"100%\", padding: \"8px\" }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div style={{ display: \"flex\", gap: \"10px\", marginTop: \"10px\" }}>\r\n                        <button\r\n                            type=\"submit\"\r\n                            disabled={isSubmitting}\r\n                            style={{\r\n                                padding: \"10px 15px\",\r\n                                backgroundColor: isSubmitting ? \"#cccccc\" : \"#4CAF50\",\r\n                                color: \"white\",\r\n                                border: \"none\",\r\n                                borderRadius: \"4px\",\r\n                                cursor: isSubmitting ? \"not-allowed\" : \"pointer\",\r\n                                flex: 1\r\n                            }}\r\n                        >\r\n                            {isSubmitting ? \"Processing...\" : (editing ? \"Save Changes\" : \"Add Item\")}\r\n                        </button>\r\n                        {editing && (\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={handleCancel}\r\n                                disabled={isSubmitting}\r\n                                style={{\r\n                                    padding: \"10px 15px\",\r\n                                    backgroundColor: \"#f44336\",\r\n                                    color: \"white\",\r\n                                    border: \"none\",\r\n                                    borderRadius: \"4px\",\r\n                                    cursor: \"pointer\",\r\n                                    flex: 1\r\n                                }}\r\n                            >\r\n                                Cancel\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default YourPage;\r\n\r\n\r\n\r\n\r\n/*import React, { useState } from \"react\";\r\nimport { getLocalItems } from '../utils/offlineQueue.js';\r\n\r\nconst YourPage = ({\r\n    items,\r\n    handleAddItem,\r\n    handleSaveEdit,\r\n    handleEditItem,\r\n    handleDeleteItem,\r\n    newItem,\r\n    setNewItem,\r\n    editing,\r\n    setEditing,\r\n    styles,\r\n    categories,\r\n    isOnline,\r\n    serverAvailable\r\n}) => {\r\n\r\n    const [videoFile, setVideoFile] = useState(null);\r\n    const userAddedItems = items.filter(item => item.userAdded);\r\n    const prices = userAddedItems.map(item => item.price);\r\n    const maxPrice = Math.max(...prices, 0);\r\n    const minPrice = Math.min(...prices, Infinity);\r\n    const avgPrice = prices.length > 0 ? prices.reduce((sum, price) => sum + price, 0) / prices.length : 0;\r\n\r\n    const getBackgroundColor = (price) => {\r\n        if (prices.length === 0) return 'white';\r\n        if (price === maxPrice) return '#EFC3CA';\r\n        if (price === minPrice) return '#C1F8FA';\r\n        if (Math.abs(price - avgPrice) < 1) return '#B7B7B7';\r\n        return 'white';\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        /*const item = editing ? await handleSaveEdit(e) : await handleAddItem(e);\r\n        if (videoFile && item?.id) {\r\n            await uploadVideo(item.id, videoFile);\r\n            setVideoFile(null);\r\n        }\r\nconst formData = new FormData(e.target);\r\nif (videoFile) {\r\n    formData.append('video', videoFile);\r\n}\r\n\r\nif (editing) {\r\n    await handleSaveEdit(e);\r\n} else {\r\n    await handleAddItem(e);\r\n}\r\n\r\nsetVideoFile(null);\r\ne.target.reset();\r\n    };\r\n\r\nconst handleCancel = () => {\r\n    setEditing(false);\r\n    setNewItem({ name: \"\", description: \"\", style: \"\", category: \"\", price: 0 });\r\n    setVideoFile(null);\r\n};\r\n\r\nconst uploadVideo = async (itemId, file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"video\", file);\r\n    try {\r\n        await fetch(`/upload/${itemId}`, {\r\n            method: \"POST\",\r\n            body: formData,\r\n        });\r\n    } catch (err) {\r\n        console.error(\"Video upload failed:\", err);\r\n    }\r\n};\r\n\r\nconst handleDownloadVideo = async (productId, videoName) => {\r\n    try {\r\n        const response = await fetch(`http://localhost:4000/api/products/${productId}/video/download`);\r\n        if (response.ok) {\r\n            const blob = await response.blob();\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.href = url;\r\n            a.download = videoName || `${productId}.mp4`;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            window.URL.revokeObjectURL(url);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error downloading video:', error);\r\n    }\r\n};\r\n\r\nreturn (\r\n    <div className=\"panel\" style={{ padding: \"20px\" }}>\r\n        <h2>Your Items ({userAddedItems.length})</h2>\r\n\r\n        <div className=\"jewelry-list\" style={{\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"repeat(auto-fill, minmax(300px, 1fr))\",\r\n            gap: \"20px\",\r\n            marginBottom: \"40px\"\r\n        }}>\r\n            {userAddedItems.map(item => (\r\n                <div\r\n                    key={item.id}\r\n                    className=\"jewelry-card\"\r\n                    style={{\r\n                        backgroundColor: getBackgroundColor(item.price),\r\n                        padding: \"15px\",\r\n                        borderRadius: \"8px\",\r\n                        boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\r\n                        position: \"relative\"\r\n                    }}\r\n                >\r\n                    <h3 style={{ marginTop: 0 }}>{item.name}</h3>\r\n                    <p>{item.description}</p>\r\n                    <p><strong>Style:</strong> {item.style}</p>\r\n                    <p><strong>Category:</strong> {item.category}</p>\r\n                    <p><strong>Price:</strong> ${item.price.toFixed(2)}</p>\r\n\r\n                    {item.video && (\r\n                        <div style={{ margin: \"10px 0\" }}>\r\n                            <video\r\n                                controls\r\n                                width=\"100%\"\r\n                                src={`http://localhost:4000/api/products/${item.id}/video`}\r\n                                style={{ borderRadius: \"8px\" }}\r\n                            />\r\n                            <button\r\n                                onClick={() => handleDownloadVideo(item.id, item.video)}\r\n                                style={{\r\n                                    marginTop: \"5px\",\r\n                                    padding: \"5px 10px\",\r\n                                    backgroundColor: \"#4CAF50\",\r\n                                    color: \"white\",\r\n                                    border: \"none\",\r\n                                    borderRadius: \"4px\",\r\n                                    cursor: \"pointer\",\r\n                                    width: \"100%\"\r\n                                }}\r\n                            >\r\n                                Download Video\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n\r\n                    <div style={{ display: \"flex\", gap: \"10px\", marginTop: \"10px\" }}>\r\n                        <button\r\n                            onClick={() => handleEditItem(item)}\r\n                            style={{\r\n                                padding: \"5px 10px\",\r\n                                backgroundColor: \"#4CAF50\",\r\n                                color: \"white\",\r\n                                border: \"none\",\r\n                                borderRadius: \"4px\",\r\n                                cursor: \"pointer\"\r\n                            }}\r\n                        >\r\n                            Edit\r\n                        </button>\r\n                        <button\r\n                            onClick={() => handleDeleteItem(item.id)}\r\n                            style={{\r\n                                padding: \"5px 10px\",\r\n                                backgroundColor: \"#f44336\",\r\n                                color: \"white\",\r\n                                border: \"none\",\r\n                                borderRadius: \"4px\",\r\n                                cursor: \"pointer\"\r\n                            }}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n\r\n        <div className=\"panel\" style={{\r\n            backgroundColor: \"#f9f9f9\",\r\n            padding: \"20px\",\r\n            borderRadius: \"8px\",\r\n            maxWidth: \"500px\",\r\n            margin: \"0 auto\"\r\n        }}>\r\n            <h2 style={{ marginTop: 0 }}>{editing ? \"Edit Item\" : \"Add New Item\"}</h2>\r\n            <form onSubmit={handleSubmit} style={{ display: \"flex\", flexDirection: \"column\", gap: \"15px\" }}>\r\n\r\n                <div>\r\n                    <label>Upload Video (optional):</label>\r\n                    <input\r\n                        type=\"file\"\r\n                        name=\"video\"\r\n                        accept=\"video/*\"\r\n                        onChange={(e) => setVideoFile(e.target.files[0])}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Name:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Item name\"\r\n                        value={newItem.name}\r\n                        onChange={(e) => setNewItem({ ...newItem, name: e.target.value })}\r\n                        required\r\n                        style={{ width: \"100%\", padding: \"8px\" }}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Description:</label>\r\n                    <textarea\r\n                        placeholder=\"Item description\"\r\n                        value={newItem.description}\r\n                        onChange={(e) => setNewItem({ ...newItem, description: e.target.value })}\r\n                        required\r\n                        style={{ width: \"100%\", padding: \"8px\", minHeight: \"80px\" }}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Style:</label>\r\n                    <select\r\n                        value={newItem.style}\r\n                        onChange={(e) => setNewItem({ ...newItem, style: e.target.value })}\r\n                        required\r\n                        style={{ width: \"100%\", padding: \"8px\" }}\r\n                    >\r\n                        <option value=\"\">Select Style</option>\r\n                        {styles.map(style => (\r\n                            <option key={style} value={style}>{style}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Category:</label>\r\n                    <select\r\n                        value={newItem.category}\r\n                        onChange={(e) => setNewItem({ ...newItem, category: e.target.value })}\r\n                        required\r\n                        style={{ width: \"100%\", padding: \"8px\" }}\r\n                    >\r\n                        <option value=\"\">Select Category</option>\r\n                        {categories.map(cat => (\r\n                            <option key={cat} value={cat}>{cat}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Price ($):</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"0.00\"\r\n                        value={newItem.price}\r\n                        onChange={(e) => setNewItem({ ...newItem, price: parseFloat(e.target.value) || 0 })}\r\n                        required\r\n                        min=\"0\"\r\n                        step=\"0.01\"\r\n                        style={{ width: \"100%\", padding: \"8px\" }}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Upload Video:</label>\r\n                    <input\r\n                        type=\"file\"\r\n                        name=\"video\"\r\n                        accept=\"video/*\"\r\n                        onChange={(e) => setVideoFile(e.target.files[0])}\r\n                    />\r\n                </div>\r\n\r\n                <div style={{ display: \"flex\", gap: \"10px\", marginTop: \"10px\" }}>\r\n                    <button\r\n                        type=\"submit\"\r\n                        style={{\r\n                            padding: \"10px 15px\",\r\n                            backgroundColor: \"#4CAF50\",\r\n                            color: \"white\",\r\n                            border: \"none\",\r\n                            borderRadius: \"4px\",\r\n                            cursor: \"pointer\",\r\n                            flex: 1\r\n                        }}\r\n                    >\r\n                        {editing ? \"Save Changes\" : \"Add Item\"}\r\n                    </button>\r\n                    {editing && (\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={handleCancel}\r\n                            style={{\r\n                                padding: \"10px 15px\",\r\n                                backgroundColor: \"#f44336\",\r\n                                color: \"white\",\r\n                                border: \"none\",\r\n                                borderRadius: \"4px\",\r\n                                cursor: \"pointer\",\r\n                                flex: 1\r\n                            }}\r\n                        >\r\n                            Cancel\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default YourPage\r\n*/\r\n\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}